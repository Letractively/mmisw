watchdog ChangeLog
Carlos Rueda - MMI/MBARI

2010-09-28
	- Updates according to new orrclient and ontclient libraries:
		<dependency>
			<groupId>org.mmisw</groupId>
			<artifactId>orrclient</artifactId>
			<version>2.0.8.beta-SNAPSHOT</version>
		</dependency>
	 mvn clean install
	 mvn exec:java -Dexec.args="Cf --ws workspace/cf"   --> OK. 
	 
	 
	 
	Initial version of UDUnits conversion
	 
	$ mvn exec:java -Dexec.args="Udunits --ws workspace/udunits --force"
	[INFO] [exec:java]
	Running with these inputs:
	    -what-  -namespace-                                         -url-
	    prefix  http://mmisw.org/ont/mmitest/udunits2-prefix/       http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-prefixes.xml
	      base  http://mmisw.org/ont/mmitest/udunits2-base/         http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-base.xml
	   derived  http://mmisw.org/ont/mmitest/udunits2-derived/      http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-derived.xml
	  accepted  http://mmisw.org/ont/mmitest/udunits2-accepted/     http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-accepted.xml
	    common  http://mmisw.org/ont/mmitest/udunits2-common/       http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-common.xml
	[Udunits] Loading http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-prefixes.xml
	[Udunits] 	             entries : 20
	[Udunits] 	            concepts : 20
	[Udunits] Overwriting workspace/udunits/udunits2-prefixes.xml
	[Udunits] workspace/udunits/udunits2-prefixes.xml: input saved
	New SKOS Ontology saved in: workspace/udunits/udunits2-prefixes.owl
	Size of the new Ontology: 95
	[Udunits] workspace/udunits/udunits2-prefixes.owl: resulting ontology saved
	[Udunits] Loading http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-base.xml
	[Udunits] 	             entries : 7
	[Udunits] 	            concepts : 7
	[Udunits] Overwriting workspace/udunits/udunits2-base.xml
	[Udunits] workspace/udunits/udunits2-base.xml: input saved
	New SKOS Ontology saved in: workspace/udunits/udunits2-base.owl
	Size of the new Ontology: 51
	[Udunits] workspace/udunits/udunits2-base.owl: resulting ontology saved
	[Udunits] Loading http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-derived.xml
	[Udunits] 	             entries : 23
	[Udunits] 	            concepts : 21
	[Udunits] Overwriting workspace/udunits/udunits2-derived.xml
	[Udunits] workspace/udunits/udunits2-derived.xml: input saved
	New SKOS Ontology saved in: workspace/udunits/udunits2-derived.owl
	Size of the new Ontology: 106
	[Udunits] workspace/udunits/udunits2-derived.owl: resulting ontology saved
	[Udunits] Loading http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-accepted.xml
	[Udunits] 	             entries : 23
	[Udunits] 	            concepts : 10
	[Udunits] Overwriting workspace/udunits/udunits2-accepted.xml
	[Udunits] workspace/udunits/udunits2-accepted.xml: input saved
	New SKOS Ontology saved in: workspace/udunits/udunits2-accepted.owl
	Size of the new Ontology: 70
	[Udunits] workspace/udunits/udunits2-accepted.owl: resulting ontology saved
	[Udunits] Loading http://www.unidata.ucar.edu/software/udunits/udunits-2/udunits2-common.xml
	[Udunits] 	             entries : 214
	[Udunits] 	            concepts : 0
	[Udunits] Overwriting workspace/udunits/udunits2-common.xml
	[Udunits] workspace/udunits/udunits2-common.xml: input saved
	New SKOS Ontology saved in: workspace/udunits/udunits2-common.owl
	Size of the new Ontology: 22
	[Udunits] workspace/udunits/udunits2-common.owl: resulting ontology saved
	[INFO] ------------------------------------------------------------------------
	[INFO] BUILD SUCCESSFUL
	[INFO] ------------------------------------------------------------------------
	[INFO] Total time: 3 seconds
	[INFO] Finished at: Tue Sep 28 23:04:48 MST 2010
	[INFO] Final Memory: 7M/13M
	[INFO] ------------------------------------------------------------------------
	
	NOTE that in some cases, the number of concepts is less than the number of entries.
	This is because I'm using the <name> element (actually the <singular> element
	within the <name>) as a basis for the instance URI. In some cases, there is no
	such name, so no concept is generated for that entry.
	Note in particular acomment in udunits2-common.xml:
	  "NB: <name> and <symbol> elements appear only within <aliases>."
	
	So, general question is: what element or value should be used as ID for unit instances? 
	 
	
2010-09-20
	CF generation changes (upon email exchange with Nan G. today)
	- skos:definition now used (instead of rdfs:comment)
	- rdfs:comment not generated anymore
	- rdfs:label not generated anymore 
	- skos:prefLabel not generated for the moment (may be again later)
	So, each standard name gets generated as follows:
      <Standard_Name rdf:about="__the_std_name_here__">
        <skos:definition>__the_description_here__</skos:definition>
        <canonical_units>__the_units_here__</canonical_units>
      </Standard_Name>	


2010-08-20
	- just updated dependency on iserver module:
		<dependency>
			<groupId>org.mmisw</groupId>
			<artifactId>iserver</artifactId>
			<version>1.9.95.alpha-SNAPSHOT</version>
		</dependency>
	  ``mvn clean install'' and ``mvn exec:java -Dexec.args="Cf --ws workspace/cf"'' --> OK. 
	
2010-08-09
	- More SWEET preparations. See workspace/sweet/README.txt
	- SweetTest now only about comparing original SWEET and registered ontologies.
	  Running with a couple of cases (from within eclipse).
	  TODO: set up ``maven test'' appropriately.
	  
	  
2010-08-06
	- Further code re-organization. Preparations for UDUnits and SWEET.
	
	- New  main program org.mmisw.watchdog.Watchdog, which dispatches one of the available
	  programs: Cf, Udunits, Sweet.
	  
	- Added dependency on iserver-core in the pom.xml.  This jar is created from the 
	  iserver module.  (Removed WUtil, which replicated utilities already
	  provided by iserver.)
	  
	
2010-08-05
	- Overall code re-organization and several interface/class renamings as preparation 
	  to incorporate conversion of other vocabularies.
	
2010-07-25
	- better report about contents of input vocabulary.
	
	- CfConverterSkosApi: TOP_CONCEPT = "parameter" (previously, "Standard_Name")
	  "Standard_Name" is not generated at all.
	  Note that CfConverterJena does generate "Standard_Name" as subClassOf skos:Concept.
	  
	- Tested some queries like the following:
	
	  Get concepts that are narrower than cf:parameter:
	
		PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
		PREFIX cf: <http://mmisw.org/ont/cf/parameter/>
		SELECT ?narrower
		WHERE { cf:parameter skos:narrower ?narrower }
		LIMIT 10	
	  
	  Get CF parameters with canonical units "kg m-2"
	  
		PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
		PREFIX cf: <http://mmisw.org/ont/cf/parameter/>
		PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		SELECT ?parameter  ?description
		WHERE { ?parameter cf:canonical_units "kg m-2".
		        ?parameter rdfs:comment ?description .
		}
		LIMIT 10	
	  
	
2010-07-24
	Registration:
	- org.mmisw.watchdog.orr.RegisterOntology: Adapted from mmiorr-client-demo.
	  It allows to register the generated ontology in the MMI ORR (or other ORR deployment).
	  To execute this step, the password of the submitting ORR user should be given:
	     ... --password <ORR user password> ...

	NOTE: The skosapi-based generation is causing problems to ORR (the Jena-based code used at ORR
	is hanging while processing the skosapi-based ontology.  SO, I'm making "jena" the default
	implementation for the conversion here.  This is unfortunate; the whole thing has made me
	spend a lot of time in debugging.
	
	NOTE 2:  Registration is failing!  ORR has only accepted direct registration in RE-HOSTED mode;
	I made some quick changes to accept FULLY-HOSTED but this would require a more exhaustive
	revision in the ORR module.
	
	In summary:
	 - Only running the conversion and with the Jena implementation!  (:/)
	 
		$ mvn -e exec:java -Dexec.args="--ws workspace/cf --force --ns http://mmisw.org/ont/cf/parameter"
		Loading http://cf-pcmdi.llnl.gov/documents/cf-standard-names/standard-name-table/current/cf-standard-name-table.xml
			 version_number: 14
			 last_modified: 2010-05-12T04:54:55Z
			 concepts: 2072
		Overwriting workspace/cf/cf-standard-name-table-14.xml
		workspace/cf/cf-standard-name-table-14.xml: input saved
		New SKOS Ontology saved in: workspace/cf/cf-standard-name-table-14-jena.owl
		Size of the new Ontology: 12440
		workspace/cf/cf-standard-name-table-14-jena.owl: resulting ontology saved
		Skipping registration (indicate at least --password to perform registration)
	   
	 And I just registered workspace/cf/cf-standard-name-table-14-jena.owl as new version of
	 http://mmisw.org/ont/cf/parameter

	Download and conversion:
	- Completed download from CF website and conversion, with outputs written to a given
	  workspace directory (by default workspace/cf/).
	  Outputs are generated if the downloaded contents correspond a new version_number 
	  (or if --force is indicated). A workspace directory (--ws <dir>) is the only required parameter.
	   
	  The usage message is:
	  
		USAGE: org.mmisw.watchdog.Cf --ws <directory> [options]
		  options:
		    --input <url>         (http://cf-pcmdi.llnl.gov/documents/cf-standard-names/standard-name-table/current/cf-standard-name-table.xml)
		    --ns <uri>            (http://mmisw.org/ont/mmi/cf/parameter/)
		    --output <filename>   (${workspace}/${basename}-${version_number}.owl)
		    --force               (false)
		    --impl [jena|skosapi] (skosapi)
	  
	
	Misc: Somehow the "Maven dependencies" in my Eclipse now properly links with the skosapi library(!).
	      See "argh" comment below.
	
2010-07-23
	- Changes to allow multiple implementations, in particular to start testing the
	  SKOS API library), and enabling arguments to the program.
	  
	- Argh, I spent quite some time trying to make Eclipse to resolve the maven dependency 'skosapi':
	  it shows as a directory under "Maven Dependencies" instead of the jar.  
	  Then I noticed that it works well if running mvn from the command-line.
	  So, I'm *manually* adding the skosapi JAR in the build path for Eclipse at least to be able
	  to continue using the IDE with the compile facilities.
	  
	
2010-07-23
	- Preparing to use SKOS API libraries, which are now deployed in Sonatype repository.
	
	-  Following instructions at 
	    https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide
	  especially re. snapshot publication (staging and release not a concern for the moment).
	  
	  - created ~/.m2/settings.xml with this contents:
			<settings>
			  <servers>
			    <server>
			      <id>sonatype-nexus-snapshots</id>
			      <username>carueda</username>
			      <password>MY JIRA PASSWORD</password>
			    </server>
			    <server>
			      <id>sonatype-nexus-staging</id>
			      <username>carueda</username>
			      <password>MY JIRA PASSWORD</password>
			    </server>
			  </servers>
			</settings>
	  - added the following to pom.xml:
			  <parent>
			    <groupId>org.sonatype.oss</groupId>
			    <artifactId>oss-parent</artifactId>
			    <version>3</version>
			  </parent>
	  - deploy snapshot:
	  		mvn clean deploy
	  		
	  and the snapshot is published:
	    https://oss.sonatype.org/content/repositories/snapshots/org/mmisw/watchdog/

	  
2010-07-12
	- Some code clean-up
	- Included output/cf.owl in SVN
	- Rerun program confirming no change in behavior
	
2010-04-28
	Initial version based on Luis' code.
	Only CF conversion is included. Other conversions to be included as
	we work on them. 
	
