org.mmisw.orrportal: MMI ORR Portal
Upgrading GWT to a recent version
Carlos Rueda

2012-04-17: Additional tests with latest GWT 2.4.0

- Locally adjusting build.properties to define gwt.sdk=/Users/carueda/Software/gwt-2.4.0
- Running in development mode as follows: 
    ant -f build2.xml devmode
  Note that for the time being Orr2.gwt.xml defines <set-property name="user.agent" value="gecko1_8" />
    
- Create war with all user agents:
  - Adjust Orr2.gwt.xml to remove the "user.agent" property setting, so the build will
    include all permutations. 
  - Create war:
	$ ant -f build2.xml clean war 
	Buildfile: /Users/carueda/mmiworkspace/org.mmisw.orrportal/gwt2/build2.xml
	
	clean:
	
	init:
	
	compile:
	     [copy] Copying 1 file to /Users/carueda/mmiworkspace/org.mmisw.orrportal/src/org/mmisw/orrportal/gwt/client/util/table/ontab
	    [mkdir] Created dir: /Users/carueda/mmiworkspace/org.mmisw.orrportal/gwt2/_generated/classes
	    [javac] Compiling 129 source files to /Users/carueda/mmiworkspace/org.mmisw.orrportal/gwt2/_generated/classes
	    [javac] Note: Some input files use or override a deprecated API.
	    [javac] Note: Recompile with -Xlint:deprecation for details.
	    [javac] Creating empty /Users/carueda/mmiworkspace/org.mmisw.orrportal/gwt2/_generated/classes/org/mmisw/orrportal/gwt/server/package-info.class
	    [javac] Creating empty /Users/carueda/mmiworkspace/org.mmisw.orrportal/gwt2/_generated/classes/org/mmisw/orrportal/gwt/client/voc2rdf/rpc/package-info.class
	    [javac] Creating empty /Users/carueda/mmiworkspace/org.mmisw.orrportal/gwt2/_generated/classes/org/mmisw/orrportal/gwt/client/rpc/package-info.class
	    [javac] Creating empty /Users/carueda/mmiworkspace/org.mmisw.orrportal/gwt2/_generated/classes/org/mmisw/orrportal/gwt/client/package-info.class
	
	jar:
	      [jar] Building jar: /Users/carueda/mmiworkspace/org.mmisw.orrportal/war/WEB-INF/lib/org.mmisw.orrportal.gwt.jar
	
	gaDef:
	
	gaUndef:
	
	ga:
	     [echo] ga_snippet = ''
	
	createwar:
	     [copy] Copying 1 file to /Users/carueda/mmiworkspace/org.mmisw.orrportal/war/WEB-INF
	     [copy] Copying 1 file to /Users/carueda/mmiworkspace/org.mmisw.orrportal/war/WEB-INF/classes
	     [copy] Copying 1 file to /Users/carueda/mmiworkspace/org.mmisw.orrportal/war
	     [copy] Copying 1 file to /Users/carueda/mmiworkspace/org.mmisw.orrportal/war/WEB-INF/lib
	
	gwtc:
	     [java] Compiling module org.mmisw.orrportal.gwt.Orr2
	     [java]    Compiling 6 permutations
	     [java]       Compiling permutation 0...
	     [java]       Compiling permutation 1...
	     [java]       Compiling permutation 2...
	     [java]       Compiling permutation 3...
	     [java]       Compiling permutation 4...
	     [java]       Compiling permutation 5...
	     [java]    Compile of permutations succeeded
	     [java] Linking into /Users/carueda/mmiworkspace/org.mmisw.orrportal/war/orr2
	     [java]    Link succeeded
	     [java]    Compilation succeeded -- 51.258s
	
	war:
	      [zip] Building zip: /Users/carueda/mmiworkspace/org.mmisw.orrportal/_generated/orr2.war
	
	BUILD SUCCESSFUL
	Total time: 58 seconds

- Clean: do "clean" when you're done with testing:
	ant -f build2.xml clean
  In particular, this removes OntologyTableGwt24.java (see below), which is a copy of the actual source 
  file OntologyTableGwt24.java_ (note, trailing underscore). This was an easy way to avoid
  affecting the regular GWT1.5.2-based build (unfortunately there doesn't seem to be a way 
  to skip selected source files for the GWT 1.5.2 compiler).
  
- So far (apart from the new OntologyTableGwt24, which is not complete yet), the various tests
  with the pre-existing widgets seem to work fine with GWT 2.4.0. But more exhaustive
  tests are in order before switching to it. 
  
- New org.mmisw.orrportal.gwt.client.util.table.ontab.OntologyTableGwt24 as a better table
  implementation based on new GWT widgets
- Locally adjusting OntologyTableCreator to return an instance of OntologyTableGwt24 for testing.
- orr-gwt24-mainpage.png: screenshot.

General things to keep in mind:

- As expected, lots of "deprecated" compile warnings (mainly related with "listener" elements), 
  but not critical (as long as they are still supported).

- "GWT no longer supports Quirks Mode" warning message in devmode.	
  Without much more investigation at this point, I adjusted the first line in index2.jsp to be:
	<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
  The warning is gone and at first glance, there're just a few perceptible but not terribly 
  wrong changes in the ORR interface. More testing is necessary.

  Some refs:
	- http://en.wikipedia.org/wiki/Quirks_mode
	- http://gwt-code-reviews.appspot.com/1422816/



2010-09-23
	
= intro =

orrportal currently uses GWT 1.5.2. From GWT 1.6, there is a new directory structure, and other
significant changes. I am starting preparations for using a recent GWT version. While the
upgrade is completed, no impact should happen to the current 1.5.2-based structure.

The new resources are under this directory (gwt2/) and some other in the main code base, as
indicated below.

NOTE: the standard creation of the 1.5.2-based war continues to work as usual, ie., using
the build.xml in the root directory of this project, ``ant'' creates _generated/orr.war.
Also, orr.launch launches the 1.5.2-based application.


= The additions/changes =

I'm basically following http://code.google.com/webtoolkit/doc/1.6/ReleaseNotes_1_6.html and
http://code.google.com/webtoolkit/doc/latest/DevGuideOrganizingProjects.html.

- I downloaded and installed GWT 2.0.4 on my development computer.

- copied Orr.gwt.xml to Orr2.gwt.xml and put <module rename-to="orr2">

- copied orr.launch to gtw2/orr2.launch and did the following changes:
   <stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="-startupUrl index.jsp org.mmisw.orrportal.gwt.Orr2"/>
   <stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Xmx1024M -Dbuild.compiler=org.mmisw.orrportal.gwt.server.gwtbug.JDTCompiler15"/>
  for this last line, see below.
  
- copied build.xml to gtw2/build2.xml and use the latter for these preparations.

- New war/ directory: note that this is not going to be a regular war/ directory in the sense of
  containing base resources, and this is basically because web.xml and other resources are
  generated from corresponding templates located elsewhere.
  Full contents of war/ is created by the "createwar" target in build2.xml based on contents in
  gwt2/, src/org/mmisw/orrportal/gwt/public and existing base_war/.
  
- New template gwt2/index2.jsp adapted from src/org/mmisw/orrportal/gwt/public/index.jsp
  with the adjustment:
   <script type="text/javascript" language="javascript" src="orr2/orr2.nocache.js"></script>

- Created class org.mmisw.orrportal.gwt.server.gwtbug.JDTCompiler15 as the workaround described
  in http://code.google.com/p/google-web-toolkit/issues/detail?id=3557 for the bug that
  prevents the index.jsp to be compiled with 1.5 source level.  (how come this is a bug in GWT 2.0.4!)


= Eclipse =

- The org.mmisw.orrportal.gwt.server.gwtbug.JDTCompiler15 class is only needed when compiling against
  GWT 2.0.4.  So, right-click it -> Build path -> Exclude when compiling/running against 1.5.2.

Switching between 1.5.2 and 2.0.4

  - If using GWT 1.5.2:
     - Open the Java Build Path libraries setting and indicate:
          gwt-user.jar and gwt-dev-mac.jar in gwt-mac-1.5.2/
     - Exclude org.mmisw.orrportal.gwt.server.gwtbug.JDTCompiler15
     - set output directory to: org.mmisw.orrportal/bin
     
  - If using GWT 2.0.4:
     - Open the Java Build Path libraries setting and indicate:
          gwt-user.jar and gwt-dev-jar in gwt-2.0.4/
     - Include org.mmisw.orrportal.gwt.server.gwtbug.JDTCompiler15
     - set output directory to: org.mmisw.orrportal/war/WEB-INF/classes
     This is the setting required to run orr2.launch
  
	
= Preliminary 2.0.4 performance evaluation  =

Development mode:

The new development mode (either via ``ant -f gtw2/build2.xml devmode'' or orr2.launch) is 
NOTICEABLY SLOWER than the 1.5.2 hosted mode !!  In fact, I easily get the slow script warnings (SSW) just
loading the first page (with the ontology listing) !  I've searched for possible solutions but
it seems there is no straighforward way. http://code.google.com/p/google-web-toolkit/issues/detail?id=860
seems related but it says "Found in GWT Release: 1.3.3", so it got worse in 2.x.x !

Production mode:

2.0.4 production mode runs certainly much faster than development mode, but SLOWER than the 1.5.2 
production mode, although perhaps acceptable when not dealing with big ontologies (like CF).  

Presumably 2.0.4 must be better in several aspects, but definitely NOT in performance (at least 
with the default settings)!!  This is frustrating; I was expecting only improvements (or at least 
not degradations on any sort) by just upgrading  :-(

A conclusion at this moment: decide on the upgrade as we address the core performance issues we
have in general (http://code.google.com/p/mmisw/issues/list?can=2&q=label=Performance).
Interestingly, some of these issues may be easier to solve with the added functionality in terms 
of GUI widget that can be enabled by upgrading!

