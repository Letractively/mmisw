org.mmisw.iserver 
Carlos Rueda  -  http://marinemetadata.org
Created: 2009-05-13
$Id$

2009-09-10   1.5.0.alpha20

	- New UserAccountCreatorUpdater
	- New Server.createUpdateUserAccount
	
	- Renamed Config to ServerConfig
	- ServerConfig: new properties: MAIL_USER, MAIL_PASSWORD
	- New MailSender helper to send new password to a user ({activation,mail}.jar included)
	- Server: new operations:
		LoginResult authenticateUser(String userName, String userPassword);
		ResetPasswordResult resetUserPassword(String username);
		UserInfoResult getUserInfo(String username);
	
	
	
2009-09-08  1.5.0.alpha18
	- Fix for issue #174 and general improvement in related functionality:
	  Util2.getDefaultNamespace:   (note: OntModel parameter removed)
		Now, the sequence to determine the URI for the submitted ontology is:
		
		- the URI associated with xml:base in the document, if given;
		or
		- the URI of the file containing the ontology
		
		See http://www.w3.org/TR/2003/PR-rdf-syntax-grammar-20031215/#section-Syntax-ID-xml-base

		(So, note that the URI associated with the empty prefix (xmlns=xx) is NOT considered
		any more in this operation. Getting the URI from xmlns=xx was the mechanism in the legacy 
		MMI related code).	
	

2009-09-03  1.5.0.alpha17   (sync'ed with ontmd version;  alpha13-16 skipped here)
	Fixed issue #168: Submitted ontology not included for SPARQL query processing
	- Using the new "ont" service to load an ontology in the graph (via "_lo" parameter).
	- OntServiceUtil.loadOntologyInGraph: to make the request
	- Server.registerOntology: call to OntServiceUtil.loadOntologyInGraph 
	
	
2009-09-01  1.5.0.alpha12
	- Server: new operation: SparqlQueryResult runSparqlQuery(SparqlQueryInfo query)
	
	
2009-08-28  1.5.0.alpha11
	- Server.getOntologyContents(RegisteredOntologyInfo registeredOntologyInfo, String version):
	  added version parameter to specify the desired version; this param can be null. 
	  If version == null:
	  	if the associated getUri is *unversioned*, then the obtained ontology is the latest version
	  	if it is *versioned*, then that version is retrieved.
	  If version != null:
	  	then, that version is retrieved.
	- The above change done during the enabling of the VINE tool in the portal. 
	
	- MappingOntologyCreator: Indicate VINE as the engineering tool:
		ont.addProperty(Omv.usedOntologyEngineeringTool, OmvMmi.vine);
	
	- VocabCreator: Indicate Voc2RDF as the engineering tool:
		ont.addProperty(Omv.usedOntologyEngineeringTool, OmvMmi.voc2rdf);
	
	
2009-08-27  1.5.0.alpha11
	- RegisteredOntologyInfo, EntityInfo: Removed transient field 'code' -- client should use its own mechanism.
	
	
2009-08-26  1.5.0.alpha11
	VINE: Adding elements to incorporate VINE functionality.
	- package org.mmisw.iserver.gwt.client.rpc.vine
		RelationInfo, Mapping
	- Server: List<RelationInfo> getVineRelationInfos()
	- TODO: Define precise info required for a mapping from this server side,
	perhaps separating the attributes of a RelationInfo from the mapping; just use
	the relation URI to link the two.
	
	More updates:  (still incomplete)
	- new MappingOntologyCreator (similar to VocabCreator)
	- enabling MappingDataCreationInfo processing



2009-08-25  1.5.0.alpha10
	- Server.getEntities(RegisteredOntologyInfo): adjustments for proper way to get the
	  ontology. This operation is only being used by the Vine app, which I'm updating now.

2009-08-25  1.5.0.alpha9
	issue #148: "Need property to capture "creator/author of original source vocabulary""
	- MdHelper: 
		- changed label and tooltip for hasCreator: 
		     "Ontology creator" ->  "..person that created the ontology representation"
		- added OmvMmi.hasContentCreator with label and tooltip: 
			"Content creator" -> "..person that created the contents reflected in the ontology"

2008-08-24  1.5.0.alpha8
	Fixed issue #161 "New version forces upload of local file"
	- CreateOntologyInfo.PriorOntologyInfo: new class to hold necessary info for when a new
	  version is to be created/registered
	- Server.createOntology: when tempOntologyInfo == null, it uses createOntologyInfo.getPriorOntologyInfo()
	  to retrieve the model directly and determine the uriForEmpty, from which the temporary
	  filename is also determined.
		
		
2008-08-16  1.5.0.alpha7
	issue 162: "External ontology considered to be internal"
	- OntServiceUtil.isOntResolvableUri(String uri): uses the ont.service.url
	  config parameter to determine if a given URI is resolvable by the deployed "ont" service.
	  This returns true iff uri.startsWith(value of ont.service.url parameter).
	  (there's a similar method in "ont" module)
	  
	- Added CreateOntologyInfo.uri member to "remember" previous URI when registerig a new version.
	
	NOTE: Suppose an external ontology whose contents are recognized by the "vocabulary (ie., voc2rd)" format.
	Currently, there is no check for the "external" property so the usual elements (authority, shortName, etc)
	are used to create the class name in the vocabulary. Should we support this, or perhaps just handle as
	"other" any external ontology?  The latter seems definitely simpler to provide.
	

2008-08-13  1.5.0.alpha6
	- Issue #164 Keep periods and case in term URI
		- More in general, if the first column given to VocCreator is named "uri," the values
		  are just checked for validity (according to java.net.URI constructor), and now
		  no conversions at all are performed. 
		  
	- CreateOntologyInfo and RegisteredOntologyInfo: removed namespaceRoot attribute -- this 
	  was added in a preliminary approach to handle re-hosting. It is not necessary anymore.
	
	
2008-08-10  1.5.0.alpha5
	Processing "version" parameter  (issue #159)
		- Server.getOntologyInfo(String ontologyUri): parses the string to extract version parameter, if any.
		
	Fixed replication of ontology attributes when creating a new version:
		- Server.createOntology(CreateOntologyInfo): newOntModel.removeAll(ont_, prd, null) is called when
		  there is a new value for the corresponding property.
		  TODO Note: We are always replacing the values; we may eventually consider a mechanism to allow 
		  actual *addition" of more values for the same predicate.
		  
	Server.getOntologyInfo(String ontologyUri): always include all versions. (note that the flag was
	called includePriorVersions originally)
	 
	
2008-08-07:
	- Checking pre-existing registered ontology when trying to submit a new one:
		Util2.checkNoPreexistingOntology(String possibleOntologyUri, BaseResult result)
		Server.createOntology(CreateOntologyInfo createOntologyInfo)
		OntServiceUtil.isRegisteredOntologyUri(String uriModel, String... acceptEntries)
		Util2.checkNoPreexistingOntology(String possibleOntologyUri, BaseResult result)
	
	
2000-08-03:   1.5.0.alpha4
	- Server.createOntology(CreateOntologyInfo): Do NOT remove "original OWL.Ontology individual"
	  if where are in re-hosting mode (createOntologyResult.isPreserveOriginalBaseNamespace).
	  If we did this on a model with the same original namespace, we would remove the owl:Ontology 
	  entry altogether and get an "rdf:Description" instead.
	  
	- Having weird RPC-related error "connection refused", which seems a GWT problem:
	  the asynchronous call registerOntology(CreateOntologyResult, LoginResult) on the client
	  does not get called to the server side.
	  
	  Fixed: Config.Prop.BIOPORTAL_REST_URL was not appropriately initialized from Server.
	  The default value (localhost based) caused the "connection refused".  This was very hard
	  to detect as the log info in the server was not showing anything!
	
	
	
2000-08-01,03:   1.5.0.alpha3 (was 1.5.0.alpha2)
	Server.getInstance(String ontServiceUrl, String bioportalRestUrl): now with parameters indicating
	the "Ont" service URL and the BioPortal REST base URL (these were previously hard-coded).
		- Config: added corresponding attributes
		- Corresponding updates in: OntologyUploader, VocabCreator, OntServiceUtil. 
		
2009-07-31  
	1.5.0.alpha2
	Continuing with "re-hosting" feature:
	
	- OntServiceUtil: new class with utility to resolve an ontology URI against the "Ont" service
	  but using the "uri" parameter, instead of trying to use the URI itself.
	- JenaUtil2.retrieveModel: based on service above.
	- Server:
		- getOntologyInfo: handle MmiUri case but also, non MmiUri (as a case of re-hosted ontology).
		  Note that the same (re-hosted) URI string is handled as both the versioned and unversioned,
		  TODO define versioning mechanism!
		- getOntologyContents: now uses JenaUtil2.retrieveModel
		- Other changes related with namespaceRoot, see below. 
		
	  
	- Some new attributes and various change under experimentation regarding user-given namespaceRoot
	  to construct the ontology URI:   
	  (NOTE: all of this may be reverted when general re-hosting mechanism is completed) 
		CreateOntologyInfo.namespaceRoot
		RegisteredOntologyInfo.namespaceRoot
		MetadataBaseInfo.authorityAbbreviationUri
		Util2: checks for duplicate URI
		VocabCreator: uses Server.DEFAULT_NAMESPACE_ROOT
		
		
	- new OntServiceUtil.getOntServiceUrl()
	
	- JenaUtil2.removeTrailingFragment: not only / but also trailing # is removed.  This change
	  responds to the re-hosting request.
	  
	- Added createOntologyResult.isPreserveOriginalBaseNamespace for convenience: it's set up in
	  createOntology and also used in registerOntology
	
2009-07-26
	
	Preparations for re-hosting of external ontology:
		"Re-hosting" means that the original base namespace of the submitted ontology is preserved.
		Basically, the whole ontology is un-changed except for new metadata elements.
	
	- TempOntologyInfo: new attribute preserveOriginalBaseNamespace
	  See ontmd project (portal) for how the flag is captured and included in the corresponding
	  TempOntologyInfo object.
	  
	- Server.createOntology(CreateOntologyInfo): uses the preserveOriginalBaseNamespace flag to
	  keep original base namespace or apply the regular asssignment of the MMISW-based namespace
	  as usual.
	  
	- Basic submission is now handled. I'm testing this with a simple ontology with base namespace
	  http://EXAMPLE.org/abc/example
	  
	- Next: complement other actions with registered "external" ontology, eg., "resolve" the 
	  ontology for display purposes ... 
	
	
2009-06-07
	- QueryUtil._setDomainClassesForProperties: checking for null to avoid a NPE with 
	  http://mmisw.org/ont/univmemphis/sensor
	  TODO Check why the domain uri has not been assigned for the propertyInfo.
	  
	  
2009-06-06
	- Utf8Util: new utilities (based on jchardet) to detect/verify the required UTF-8 charset
	  for any external stream to be incorporated in the registry (no attempts to do any automated
	  conversions for the moment).
	- Applying UTF-8 verification:
		- when loading a model from the registry: normally, every entry in the registry should be
		  UTF-8 already; however, this is a general sanity check that can be useful in the case of
		  any previously registered entry that may not be UTF-8.
		- before the conversion from CSV in VocabCreator
		- when trying to create an ontology from an external ontology file 
		
	- Util renamed to QueryUtil
	
	- XmlBaseExtractor: removed a strange ``throw new SAXException("No xml:base")'' in the original code;
	  this exception was thrown even when an xml:base element has already been found!
	  
	- Fixed issue #140: "ontologies with no declared namespace for empty prefix are not accepted"
		Util2.getDefaultNamespace(OntModel model, File file, BaseResult baseResult): now return
		the first non-null value in the following order:
			- model.getNsPrefixURI("")
			- XmlBaseExtractor.getXMLBase(...)
			- file.toURI().toString()
		See http://www.w3.org/TR/2003/PR-rdf-syntax-grammar-20031215/#section-Syntax-ID-xml-base
		
		
	  

2009-06-05
	- several adjustments as the main operations are completed
	- removed several interim dependencies
	- some renamings of types and operations
	- support for registering an uploaded file completed

2009-06-04
	- Implemented the "loading" of local file into working space. This is capture in a TempOntologyInfo.
	  (note the uploading operation is still implemented in the ontmd module).
	- Other preparations for registration of an "other" ontology (not vine, nor voc2rdf).
	
	
2009-06-03
	- Instead of using CreateOntologyInfo as a base class for the various types of ontologies to be
	  created (currently only "vocabulary", but later "mapping" and "regular externally given ontology"),
	  it now contains a DataCreationInfo member. This DataCreationInfo will serve as the basis for extension
	  fot the various types of ontologies.
	  
	- fixed issue #140: "ontologies with no declared namespace for empty prefix are not accepted"
	  If default namespace is not defined, try using xml:base's URI. TODO: test!
	  
	  
2009-06-02
	- getAllOntologies(boolean includePriorVersions) and getOntologyInfo(String ontologyUri) complemented
	  with auxiliary Map<String, List<OntologyInfo>> getUnversionedToOntologyInfoListMap(String onlyThisUnversionedUri).
	- In particular,
		- getOntologyInfo(String ontologyUri) now handles versioned and unversioned URI requests.
		- getAllOntologies(boolean includePriorVersions): main entries in the returned list at UNversioned;
		  the sublist of priorVersions are in versioned form *including* the most recent.
		  Elements in the priorVersion list are sorted by descending dataCreated so the most recent is first.
	
2009-06-01
	- Added OntologyInfo getOntologyInfo(String ontologyUri).
	
2009-05-31
	- Util.getEntities(OntologyInfo ontologyInfo, OntModel ontModel): assign ClassInfo object 
	  corresponding to the domain of each property so it's easier to get associated attributes. 
	  
	- Many changes for including editing and creation of new version of a vocabulary ontology
	
2009-05-25
	- Support to handle different types of ontology data: vocabulary, mapping, and other, although
	  this is based on some heuristics; a better mechanism should be implemented (idea is to use
	  a particular ontology metadata property that indicates the type of ontology, for example
	  omv:usedOntologyEngineeringTool.
	
	
2009-05-24
	- getAllOntologies now return only the latest versions of all ontologies as the main entries
	  of the list; and, optionally, the prior versiones will be included in the internal property
	  priorVersions.
	  
	  
2009-05-23
	- included most of metadata management here (from ontmd module)

2009-05-22
	- Added username attribute to OntologyInfo
	
	- Added service getEntities(String ontologyUri), which btw facilitates current refactoring. 
	 
2009-05-13
	Module extracted from vine prototype. The goal is to unify the various operations to the
	server through this module.
	Note: this module provides the serializable objects required for the communication and
	a set of core types to be used on the server side.
	
	This is initially to be used by OntMd to provide the "portal" interface. Later,
	vine itself will be integrated.
