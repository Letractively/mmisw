org.mmisw.iserver 
Carlos Rueda  -  http://marinemetadata.org
Created: 2009-05-13

2000-08-03:   1.5.0.alpha4
	- Server.createOntology(CreateOntologyInfo): Do NOT remove "original OWL.Ontology individual"
	  if where are in re-hosting mode (createOntologyResult.isPreserveOriginalBaseNamespace).
	  If we did this on a model with the same original namespace, we would remove the owl:Ontology 
	  entry altogether and get an "rdf:Description" instead.
	
	
	
2000-08-01,03:   1.5.0.alpha3 (was 1.5.0.alpha2)
	Server.getInstance(String ontServiceUrl, String bioportalRestUrl): now with parameters indicating
	the "Ont" service URL and the BioPortal REST base URL (these were previously hard-coded).
		- Config: added corresponding attributes
		- Corresponding updates in: OntologyUploader, VocabCreator, OntServiceUtil. 
		
2009-07-31  
	1.5.0.alpha2
	Continuing with "re-hosting" feature:
	
	- OntServiceUtil: new class with utility to resolve an ontology URI against the "Ont" service
	  but using the "uri" parameter, instead of trying to use the URI itself.
	- JenaUtil2.retrieveModel: based on service above.
	- Server:
		- getOntologyInfo: handle MmiUri case but also, non MmiUri (as a case of re-hosted ontology).
		  Note that the same (re-hosted) URI string is handled as both the versioned and unversioned,
		  TODO define versioning mechanism!
		- getOntologyContents: now uses JenaUtil2.retrieveModel
		- Other changes related with namespaceRoot, see below. 
		
	  
	- Some new attributes and various change under experimentation regarding user-given namespaceRoot
	  to construct the ontology URI:   
	  (NOTE: all of this may be reverted when general re-hosting mechanism is completed) 
		CreateOntologyInfo.namespaceRoot
		RegisteredOntologyInfo.namespaceRoot
		MetadataBaseInfo.authorityAbbreviationUri
		Util2: checks for duplicate URI
		VocabCreator: uses Server.DEFAULT_NAMESPACE_ROOT
		
		
	- new OntServiceUtil.getOntServiceUrl()
	
	- JenaUtil2.removeTrailingFragment: not only / but also trailing # is removed.  This change
	  responds to the re-hosting request.
	  
	- Added createOntologyResult.isPreserveOriginalBaseNamespace for convenience: it's set up in
	  createOntology and also used in registerOntology
	
2009-07-26
	
	Preparations for re-hosting of external ontology:
		"Re-hosting" means that the original base namespace of the submitted ontology is preserved.
		Basically, the whole ontology is un-changed except for new metadata elements.
	
	- TempOntologyInfo: new attribute preserveOriginalBaseNamespace
	  See ontmd project (portal) for how the flag is captured and included in the corresponding
	  TempOntologyInfo object.
	  
	- Server.createOntology(CreateOntologyInfo): uses the preserveOriginalBaseNamespace flag to
	  keep original base namespace or apply the regular asssignment of the MMISW-based namespace
	  as usual.
	  
	- Basic submission is now handled. I'm testing this with a simple ontology with base namespace
	  http://EXAMPLE.org/abc/example
	  
	- Next: complement other actions with registered "external" ontology, eg., "resolve" the 
	  ontology for display purposes ... 
	
	
2009-06-07
	- QueryUtil._setDomainClassesForProperties: checking for null to avoid a NPE with 
	  http://mmisw.org/ont/univmemphis/sensor
	  TODO Check why the domain uri has not been assigned for the propertyInfo.
	  
	  
2009-06-06
	- Utf8Util: new utilities (based on jchardet) to detect/verify the required UTF-8 charset
	  for any external stream to be incorporated in the registry (no attempts to do any automated
	  conversions for the moment).
	- Applying UTF-8 verification:
		- when loading a model from the registry: normally, every entry in the registry should be
		  UTF-8 already; however, this is a general sanity check that can be useful in the case of
		  any previously registered entry that may not be UTF-8.
		- before the conversion from CSV in VocabCreator
		- when trying to create an ontology from an external ontology file 
		
	- Util renamed to QueryUtil
	
	- XmlBaseExtractor: removed a strange ``throw new SAXException("No xml:base")'' in the original code;
	  this exception was thrown even when an xml:base element has already been found!
	  
	- Fixed issue #140: "ontologies with no declared namespace for empty prefix are not accepted"
		Util2.getDefaultNamespace(OntModel model, File file, BaseResult baseResult): now return
		the first non-null value in the following order:
			- model.getNsPrefixURI("")
			- XmlBaseExtractor.getXMLBase(...)
			- file.toURI().toString()
		See http://www.w3.org/TR/2003/PR-rdf-syntax-grammar-20031215/#section-Syntax-ID-xml-base
		
		
	  

2009-06-05
	- several adjustments as the main operations are completed
	- removed several interim dependencies
	- some renamings of types and operations
	- support for registering an uploaded file completed

2009-06-04
	- Implemented the "loading" of local file into working space. This is capture in a TempOntologyInfo.
	  (note the uploading operation is still implemented in the ontmd module).
	- Other preparations for registration of an "other" ontology (not vine, nor voc2rdf).
	
	
2009-06-03
	- Instead of using CreateOntologyInfo as a base class for the various types of ontologies to be
	  created (currently only "vocabulary", but later "mapping" and "regular externally given ontology"),
	  it now contains a DataCreationInfo member. This DataCreationInfo will serve as the basis for extension
	  fot the various types of ontologies.
	  
	- fixed issue #140: "ontologies with no declared namespace for empty prefix are not accepted"
	  If default namespace is not defined, try using xml:base's URI. TODO: test!
	  
	  
2009-06-02
	- getAllOntologies(boolean includePriorVersions) and getOntologyInfo(String ontologyUri) complemented
	  with auxiliary Map<String, List<OntologyInfo>> getUnversionedToOntologyInfoListMap(String onlyThisUnversionedUri).
	- In particular,
		- getOntologyInfo(String ontologyUri) now handles versioned and unversioned URI requests.
		- getAllOntologies(boolean includePriorVersions): main entries in the returned list at UNversioned;
		  the sublist of priorVersions are in versioned form *including* the most recent.
		  Elements in the priorVersion list are sorted by descending dataCreated so the most recent is first.
	
2009-06-01
	- Added OntologyInfo getOntologyInfo(String ontologyUri).
	
2009-05-31
	- Util.getEntities(OntologyInfo ontologyInfo, OntModel ontModel): assign ClassInfo object 
	  corresponding to the domain of each property so it's easier to get associated attributes. 
	  
	- Many changes for including editing and creation of new version of a vocabulary ontology
	
2009-05-25
	- Support to handle different types of ontology data: vocabulary, mapping, and other, although
	  this is based on some heuristics; a better mechanism should be implemented (idea is to use
	  a particular ontology metadata property that indicates the type of ontology, for example
	  omv:usedOntologyEngineeringTool.
	
	
2009-05-24
	- getAllOntologies now return only the latest versions of all ontologies as the main entries
	  of the list; and, optionally, the prior versiones will be included in the internal property
	  priorVersions.
	  
	  
2009-05-23
	- included most of metadata management here (from ontmd module)

2009-05-22
	- Added username attribute to OntologyInfo
	
	- Added service getEntities(String ontologyUri), which btw facilitates current refactoring. 
	 
2009-05-13
	Module extracted from vine prototype. The goal is to unify the various operations to the
	server through this module.
	Note: this module provides the serializable objects required for the communication and
	a set of core types to be used on the server side.
	
	This is initially to be used by OntMd to provide the "portal" interface. Later,
	vine itself will be integrated.
