org.mmisw.iserver - ORR Client Library ("interface to the server")
Carlos Rueda  -  http://marinemetadata.org
Created: 2009-05-13
$Id$

2010-08-05
	Issue #133 "allow to do narrower-than hierarquies trees with indentation simple files"
	
	- Moved Voc2Skos to org.mmisw.iserver.core.voc2skos/ (previously under org.mmisw.iserver.core.util)
	- Created unit tests org.mmisw.iserver.core.voc2skos.test.Voc2SkosTest with required resources
	  under resource/voc2skos/.
	- Added target voc2skosTests to build.xml
	
	 
2010-08-04
	Issue #133 "allow to do narrower-than hierarquies trees with indentation simple files"
	
	Now also processing indentation. The resulting SKOS file below passes the validation
	at http://demo.semantic-web.at:8080/SkosServices/index
	The only warning is:
		Missing Language Tags: Found 9 occurrences of prefLabel without language tag.
		Handles missing language tags of all sorts of SKOS labels and textual content.
	TODO which is expected as no language tags are yet incorporated in the process.
	
	The example input is now (see resource/voc2skos-example.csv):
		-----------------------------------------------------------------------------------
		ontologyURI = "http://example.org/myont"
		class = "Foo"

		skos:prefLabel = "My preferred label for Foo"
		skos:definition = "This is a demo skos:definition for concept Foo"
		
		indent.string = "  "
		indent.property = skos:narrower
		
		separator = ","    
		
		ID             ,skos:prefLabel ,skos:definition           ,myProperty 
		conceptA       ,concept A      ,concept A definition      ,my value for concept A
		  conceptA1    ,concept A1     ,concept A1 definition     ,my value for concept A1
		    conceptA1a ,concept A1a    ,concept A1a definition    ,my value for concept A1a
		    conceptA1b ,concept A1b    ,concept A1b definition    ,my value for concept A1b
		  conceptA2    ,concept A2     ,concept A2 definition     ,my value for concept A2
		conceptB       ,concept B      ,concept B definition      ,my value for concept B
		  conceptB1    ,concept B1     ,concept B1 definition     ,my value for concept B1
		conceptC       ,concept C      ,concept C definition      ,my value for concept C
		-----------------------------------------------------------------------------------
	
	The output is in resource/voc2skos-example.rdf
	
	NOTE: Voc2Skos.saveOntModelXML: passing namespace to 'xmlbase' property because
	this seems to propely generate the URIs for the various entities. If base is used
	(ie., for an xmlbase with no trailing fragment separator), then the entity URIs are messed up.
	In concrete, having:
		xml:base="http://example.org/myont/"
	entities are OK, eg.,
		<owl:Class rdf:about="Foo"> ...
		<Foo rdf:about="conceptB">  ...
	but, if:
		xml:base="http://example.org/myont"
	then, the entities look like:
		<owl:Class rdf:about="myont/Foo"> ...
		<Foo rdf:about="myont/conceptB"> ...
	
	TODO what's going on? a Jena bug?
	
	
	
2010-08-03  1.9.92.alpha

	Issue #133 "allow to do narrower-than hierarquies trees with indentation simple files"
	
	The approach is to use the "load external ontology" functionality to also allow the
	import of a CSV file into an (SKOS) ontology. The registration itself is done in "RDF/XML".
	
	An example of a file that can be processed is:
		--------------------------------------------------------------------	
		# test input for voc2skos
		
		class.id = ConceptFoo
		class.prefLabel = Concept Foo
		
		# the terms:
		ID,     skos:prefLabel  , rdfs:comment,     canonical_units    
		myid1,  my pref label 1 , my description 1, m/s
		myid2,  my pref label 2 , my description 2, baz
		--------------------------------------------------------------------
	
	See new class Voc2Skos.
	
	
	The following operation has been generalized to also allow the source file to be 
	in any of the languages recognized by Jena.
	
	- IServer.getTempOntologyInfo(
			String fileType, String uploadResults, 
			boolean includeContents, boolean includeRdf)
	  and associated signatures in its implementation, now with new parameter 'fileType' 
	  indicating the type of the file associated with the uploadResults.
	  
	  Previously, the code always assumed "RDF/XML" contents according to
	  the call to Jena's model.read method, which by default uses that language.  
	  Now, the fileType parameter can be any of the languages recognized by Jena 
	  (see Utils2.JENA_LANGS), but also a special fileType, "voc2skos", which is handled 
	  by the new class Voc2Skos. See dispatch in TempOntologyHelper.getTempOntologyInfo.



2010-07-26  1.9.91.alpha
	- Issue #236 "Author column should show Content Creator"
	  OntologyUploader._getContactName():
		Note: the value that is shown in the main ontology table at ORR comes from
		the contact_name field in the aquaportal database. ORR could extract the
		contentCreator value from the metadata associated with the ontology, but
		such metadata is NOT yet available when the table is displayed (the metadata
		is obtained on demand when a particular ontology is to be displayed in more detail).
		So, instead of doing that change in the ORR module, the following change is done
		here: use the value of OmvMmi.hasContentCreator to fill in contact_name if such
		value is available; otherwise, just use the value of Omv.hasCreator or DC.creator
		as was done prior to this change.
	  

2010-07-23   1.9.9.alpha
	- QueryUtil: accept "csv" (besides "json") to parse result.
	
	NOTE: Since the use of the AllegroGraph, the Ont service is not honoring the "json" ouput format
	for SPARQL queries (instead it replies in "csv" format).  The SmlMor module (sensorML editor)
	is issuing queries with requested "json" format and calling QueryUtil.parseResult to parse the
	result, which was only processing "json".  The quick fix is to request "csv" and parse "csv." 
	The real fix for the "json" format is still pending in the Ont service,
	see http://code.google.com/p/mmisw/issues/detail?id=261
	
	
2010-06-29   1.9.8.alpha   (note: syncing version with Ont and orr modules)
	Upgraded Jena library to 2.6.3:
	As a general approach, I'm removing all the "old" libraries that have a corresponding JAR in the
	new version of Jena, and then using the ones coming with Jena:
	
	- Removed "old" jars from base_war/WEB_INF/lib/ associated with Jena 2.5.6 that have versions 
	  in the new Jena:
		-rw-r--r--  1 carueda  staff   358085 Aug 20  2008 log4j-1.2.12.jar
		-rw-r--r--  1 carueda  staff   121070 Oct 13  2008 junit.jar
		-rw-r--r--  1 carueda  staff  1203860 Oct 28  2008 xercesImpl.jar
		-rw-r--r--  1 carueda  staff  1439063 Oct 28  2008 jenatest.jar
		-rw-r--r--  1 carueda  staff  2216624 Oct 28  2008 jena.jar
		-rw-r--r--  1 carueda  staff   150954 Oct 28  2008 iri.jar
		-rw-r--r--  1 carueda  staff  3147374 Oct 28  2008 icu4j_3_4.jar
		-rw-r--r--  1 carueda  staff  1405635 Oct 28  2008 arq.jar
		-rw-r--r--  1 carueda  staff   151637 Oct 28  2008 arq-extra.jar
	
	- base_war/WEB_INF/lib/jena/ new directory containing ALL(*) the jars associated with the latest
	  version of Jena, which is 2.6.3:
		-rw-r--r--@ 1 carueda  staff  1203860 Feb  5  2009 xercesImpl-2.7.1.jar
		-rw-r--r--@ 1 carueda  staff  3233439 Feb 27  2009 icu4j-3.4.4.jar
		-rw-r--r--@ 1 carueda  staff   198945 Feb 27  2009 junit-4.5.jar
		-rw-r--r--@ 1 carueda  staff   358180 Jun 29  2009 log4j-1.2.13.jar
		-rw-r--r--@ 1 carueda  staff    26514 Jul 31  2009 stax-api-1.0.1.jar
		-rw-r--r--@ 1 carueda  staff   524224 Jul 31  2009 wstx-asl-3.2.9.jar
		-rw-r--r--@ 1 carueda  staff   665064 Jul 31  2009 lucene-core-2.3.1.jar
		-rw-r--r--@ 1 carueda  staff   151589 Nov 13  2009 iri-0.8.jar
		-rw-r--r--@ 1 carueda  staff   210961 Nov 13  2009 iri-0.8-sources.jar
		-rw-r--r--@ 1 carueda  staff     9679 Dec  3  2009 slf4j-log4j12-1.5.8.jar
		-rw-r--r--@ 1 carueda  staff    23445 Dec  3  2009 slf4j-api-1.5.8.jar
		-rw-r--r--@ 1 carueda  staff  1680523 May 28 14:26 arq-2.8.4.jar
		-rw-r--r--@ 1 carueda  staff  1900385 Jun  1 14:31 jena-2.6.3.jar
		-rw-r--r--@ 1 carueda  staff  1506473 Jun  1 14:32 jena-2.6.3-tests.jar
	(*) I'm just following the indication in Jena-2.6.3/doc/readme.html: "Installation: ... set the Java 
	classpath to include all the JAR files in the JENAROOT/lib/ directory."
	
2010-06-29
	New src/org/mmisw/iserver/core/version.properties which is a template that build.xml uses
	to create ${build.dir}/classes/org/mmisw/iserver/core/version.properties, which ServerConfig
	now uses to initialize Prop.VERSION and Prop.BUILD.  AppInfo now includes a 'build' attribute.
	IServer.getAppInfo() now returns accurate version information.
	
	
2010-06-17   1.9.4.alpha
	Issue 258:"reset password in effect but lost if error while sending email"
	- Server.resetUserPassword: Part of the fix is to first check the mail account 
	  parameters are given.
	  

2010-06-15   1.9.2.alpha    (note: syncing version with Ont and orr modules)
	Issue #252: "omv:version gone?"
	- MdHelper.static { uriPropMap.put(Omv.version.getURI(), Omv.version); }
	  With this assignment, new ontologies (either created with voc2rdf, vine, or uploaded
	  both fully-hosted and rehosted, will have the omv:version property assigned to the ontology resource.
	  
	  
	  Note: This is part of the solution as the already registered ontologies with no omv:version 
	  will need some other mechanism to re-assign it.
	
	
2010-06-14   1.9.0.alpha
	Issue #242: "admin interface to remove an ontology" implemented:
	- Changes in Ont module completed.
	- Changes in this iserver module completed.

2009-12-28   1.8.1.alpha
	- preliminary Server.createGroupsOntology (management of internal resources still under revision) 

2009-12-24   1.8.0.alpha
	- Server.prepareUsersOntology(LoginResult loginResult) now reports the URI, which is given by the Ont service.
	  
	  
2009-12-23   1.8.0.alpha
	Preparing for handling "internal" ontologies. An internal ontology provides supporting information
	for the MMI ORR. 

	- New service Server.prepareUsersOntology(LoginResult loginResult, String usersUri)


2009-12-22   1.7.3.alpha
	- TempOntologyInfo: removed 'namespace' attribute; the 'uri' one is used instead.
	

2009-12-21   1.7.2.alpha
	Fixed Issue #213: ontology with hash fragment separator not handled appropriately
	- Util2.getDefaultNamespace(OntModel model, File file, BaseResult baseResult): now follows
	  this sequence (note also that the model parameter has been reinserted):
		- URI of the first ontology resource, if any, associated to the model;
		- namespace associated with the empty prefix, if any;
		- URI of the xml:base of the document, if any;
		- null, otherwise.
		
	To properly handle a new submission with *no* original namespace associated (as determined by
		Util2.getDefaultNamespace), now the returned null is accepted and handled in:
		- TempOntologyHelper.getTempOntologyInfo: it just leaves the namespace and shortName null.
		- Server.createOntologyFullyHosted, no transfer to new namespace is necessary (nothing to be transferred);
	  But note that the namespace *is* required in Server.createOntologyReHosted.
		
	- TempOntologyInfo: new field isOntResolvable that a client (the ORR portal) can use to determine whether
	  it's appropriate to register an ontology in re-hosted mode. Set by TempOntologyHelper.getTempOntologyInfo. 
	  
	- QueryUtil.getEntities(BaseOntologyInfo baseOntologyInfo, OntModel ontModel): If the ontology URI is
	  Ont resolvable, apply the ad hoc rules to determine type of ontology; otherwise (ie., the ontology is
	  re-hosted), always create the "other" type of ontology data.
	  

2009-11-30   1.7.0.alpha
	- Setting version to 1.7.0.alpha reflecting all the 1.6.1+ changes below.
	  This is also sync'ed with ontmd module.
	- Current Ont version: MMI Ontology and Term URI Resolver. Version 1.4.2.beta (20091125194637)


2009-11-24   1.6.2.alpha6
	- UserAccountCreatorUpdater: detect duplicate username error to report a more
	  meaningful error message.
	  
	
2009-11-24   1.6.2.alpha5
	Issue #222 - duplicate of issue #43: Handle non-UTF8 and UTF8 inputs
	- NO conversions are attempted (I wrote some preliminary code for that but it's now
	  commented out.  See Utf8Util.convertToUtf8).
	- Instead, the file is tried to be read with Jena and, if it fails, then the catched exception is
	  examined to extract any parse-exception; also the Utf8Util'ity to verify UTF-8 is called
	  to complement the message with the possible charsets.
	- Tested with resource/theme-windows-1250.owl (a file in windows-1250 encoding)
	- In general, the handling of UTF-8 should be complete now.
	  
	
2009-11-18   1.6.2.alpha5
	- OntologyUploader: set "UTF-8" charset explicitly to the filePart

2009-11-17   1.6.2.alpha5
	Issue #222 - duplicate of issue #43: Handle non-UTF8 and UTF8 inputs
	
	New Utf8Util.readFileWithConversionToUtf8: tested internally but yet to be called at
	appropriate places.  TODO
	
	Committed:
		Util2.java
		Utf8Util.java
		ReadFileResult.java (new)
		
	Modified locally but not yet committed (as they need updates):
		- Server.java
		- TempOntologyHelper.java
	
	***NOTE: update the following text about a preliminary approach***
	
	- Not yet doing any conversion. But I did the following change to check for UTF-8 because
	  the attached theme.owl is actually read by Jena without problem event though that the
	  file does not pass the UTF-8 test.
	  
	  New utility methods:
	  	- Util2.readRdfWithCheckingUtf8(File file)
	  	- Util2.loadModelWithCheckingUtf8(File file)
	  These two methods first try to read the model using Jena immediately; if this is OK, then
	  just continue with that. But if the Jena call fails, then, these methods do the UTF-8 test
	  in an attempt to be more specific about the cause of the load error.
	  
	  Well, also fixed the following:
	  In the process of creating the temporary file in ServerConfig.ONTMD_PREVIEW_DIR from the one
	  coming fron the upload step (see PortalConfig.Prop.ONTMD_PRE_UPLOADS in ontmd module),
	  the FileWriter was created with the default charset. Now creating with "UTF-8" explicitly.
	  See Server._writeRdfToFile
	***  
	
	
	
	
2009-11-13   1.6.2.alpha4
	Issue #221 retain the original camelCase in the URLs
	- VocabCreator: removed toLowerCase conversions in:
		createIndividual
		createDatatypeProperty
		
	
2009-11-10   1.6.2.alpha2
	Issue #214: "Direct registration of ontology"
	- providing service Server.registerOntologyDirectly
	- new helper class OoiCi
	- OoiCi.registerOntologyDirectly: this service allows to register an RDF file without
	  any modifications to it. It handles new entries as well as new version for existing entries.
	  It accepts and dispatches a "graphId" parameter intended to indicate the desired model
	  graph at the "Ont" service back-end. At time of writing such service is not yet implemented
	  in the "Ont" module.


2009-11-03   1.6.0.alpha
	- Setting version to 1.6.0.alpha reflecting all the 1.5.0.alpha30 changes below.
	  This is also sync'ed with ontmd module.
	  
	- MdHelper: making Omv.acronym a required attribute since it is used for the shortName
	 component.
	 
2009-11-02  1.5.0.alpha30
	- new client-side QueryUtil to parse a query response


2009-10-20   1.5.0.alpha30
	- MdHelper: added Omv.reference and Omv.acronym to the general_attr_list so some
	  dependent parts on this list can "see" these properties as well. 
	
	
2009-10-19   1.5.0.alpha30
	- RegisteredOntologyInfo: added hostingType attribute, which is assigned by
	  Server._createOntologyInfo
	  
	  
2009-10-07   1.5.0.alpha30
	issue #99 Normalize theme/topic/class throughout interface
		- MdHelper:
			- Omv.acronym to be used for what is supposed to be: "A short name by which an ontology 
		  	  is formally known."
		  	- Resource type captured with OmvMmi.hasResourceType
		  	
	 Issue 177: Re-hosting option is not clear
		- New HostingType and corresponding attribute in CreateOntologyInfo
		- New OntModelUtil to create and update OntModel objects
		- Server: 
			- preparing new methods for createOntology (createOntology_newMethod) and
		  	  registerOntology (registerOntology_newMethod).  These are called when the
		  	  hostingType attribute is specified (as a way to test the new methods).
		  	  
			- createOntologyFullyHosted: preliminary tests OK
			- registerOntologyFullyHosted: preliminary tests OK
			  	
			- createOntologyReHosted: preliminary tests OK
			- registerOntologyReHosted: preliminary tests OK
		  	


2009-10-06   1.5.0.alpha30
	- issue #196 capture omv:reference
		MdHelper.prepareGroups: Creating AttrDef for omv:reference.
		Note that I'm only creating the AttrDef but no including it in any group; the reason
		is that this attribute will be accessed directly from the new wizard-like interface in the portal.
		
	- New HostingType enumeration
	- New CreateOntologyInfo.hostingType attribute; when this is given (non-null), it used by the new 
	  methods in Server to createOntology() and registerOntology().
	  

2009-10-02   1.5.0.alpha30
	- MdHelper and MetadataBaseInfo: Exposing more elements to clients

	- TempOntologyInfo: now with a shortName attribute taken from the xmlbase
	- CreateOntologyInfo: now with a baseOntologyInfo attribute which is info about the 
	  ontology used as starting point, if any.
	  
2009-10-01   1.5.0.alpha30
	- Moved displayLabel from RegisteredOntologyInfo to its superclass BaseOntologyInfo
	  (so, a TempOntologyInfo can also have a displayLabel).
	  
	  
2009-09-30   1.5.0.alpha30
	- Removed JenaUtil2 in this module (which was a replication of a class in the
	  "ont: module); now using org.mmisw.ont.misc.jar (generated by "ont").
	
	- TempOntologyInfo: now with an xmlBase attribute. This is a preliminary change for a better
	  approach to examine an external ontology, in particular, to get the base URI associated with
	  the external ontology. 
	  TODO consider implementing a getBaseUri operation (in JenaUtil2) to check for the xml:base. 
	  If there is no xml:base, get the URI of the Ontology resource in the (base model in the file).
	  If there is no such resource, what to do? 
	  See http://jena.sourceforge.net/ontology/#metadata 
	
	
2009-09-29   1.5.0.alpha29   (alpha23-28 skipped to sync with ontmd)
	Fixed issue #192 "wrong versioned/unversioned response"
		Util2.replaceNameSpace now uses Util2._inNamespace(Resource resource, String namespace)
		to determine when a resource is "located" in a given namespace.
		
	Fixed Issue #193 "list of versions include unversioned"
		getOntologyInfoWithVersionParams: in case b), the first entry in the list was altered; now
		a copy is made, which is assigned the unversioned URI.
	
	
2009-09-18   1.5.0.alpha22
	- New support to resolve term URIs. This is generalized for both ontology URIs and
	  term URIs via a new class ResolveUriResult and service Server.resolveUri(uri).
	  The operation first tries getOntologyInfo(uri) and then _getEntityInfo(..).
	- _getEntityInfo: The resolution of a term URI is based on the query:
	    SELECT ?prop ?value WHERE { <URI> ?prop ?value . }
	  against the Ont service (which maintains the ontological graph).
	  
	 
2009-09-11   1.5.0.alpha21
	- General user account management, login, and password reset completed:
		Fixed issue #176: login issue - forgot password user name
		Fixed Issue #173: user phone number can not be changes
	- Improvements in parsing of RESTful responses
	- New helper XmlAccessor: Used by UserAuthenticator and UserAccountCreatorUpdater
	- Check email address before creating/updating a user account. Ideally, a full verification
	  would include using the email (eg., sending some special URL that the user can click to
	  verify/activate his/her account).
		
	- TODO Next: use cookies to keep the session (Issue #154)


2009-09-10   1.5.0.alpha20

	- New UserAccountCreatorUpdater
	- New Server.createUpdateUserAccount
	
	- Renamed Config to ServerConfig
	- ServerConfig: new properties: MAIL_USER, MAIL_PASSWORD
	- New MailSender helper to send new password to a user ({activation,mail}.jar included)
	- Server: new operations:
		LoginResult authenticateUser(String userName, String userPassword);
		ResetPasswordResult resetUserPassword(String username);
		UserInfoResult getUserInfo(String username);
	
	
	
2009-09-08  1.5.0.alpha18
	- Fix for issue #174 and general improvement in related functionality:
	  Util2.getDefaultNamespace:   (note: OntModel parameter removed)
		Now, the sequence to determine the URI for the submitted ontology is:
		
		- the URI associated with xml:base in the document, if given;
		or
		- the URI of the file containing the ontology
		
		See http://www.w3.org/TR/2003/PR-rdf-syntax-grammar-20031215/#section-Syntax-ID-xml-base

		(So, note that the URI associated with the empty prefix (xmlns=xx) is NOT considered
		any more in this operation. Getting the URI from xmlns=xx was the mechanism in the legacy 
		MMI related code).	
	

2009-09-03  1.5.0.alpha17   (sync'ed with ontmd version;  alpha13-16 skipped here)
	Fixed issue #168: Submitted ontology not included for SPARQL query processing
	- Using the new "ont" service to load an ontology in the graph (via "_lo" parameter).
	- OntServiceUtil.loadOntologyInGraph: to make the request
	- Server.registerOntology: call to OntServiceUtil.loadOntologyInGraph 
	
	
2009-09-01  1.5.0.alpha12
	- Server: new operation: SparqlQueryResult runSparqlQuery(SparqlQueryInfo query)
	
	
2009-08-28  1.5.0.alpha11
	- Server.getOntologyContents(RegisteredOntologyInfo registeredOntologyInfo, String version):
	  added version parameter to specify the desired version; this param can be null. 
	  If version == null:
	  	if the associated getUri is *unversioned*, then the obtained ontology is the latest version
	  	if it is *versioned*, then that version is retrieved.
	  If version != null:
	  	then, that version is retrieved.
	- The above change done during the enabling of the VINE tool in the portal. 
	
	- MappingOntologyCreator: Indicate VINE as the engineering tool:
		ont.addProperty(Omv.usedOntologyEngineeringTool, OmvMmi.vine);
	
	- VocabCreator: Indicate Voc2RDF as the engineering tool:
		ont.addProperty(Omv.usedOntologyEngineeringTool, OmvMmi.voc2rdf);
	
	
2009-08-27  1.5.0.alpha11
	- RegisteredOntologyInfo, EntityInfo: Removed transient field 'code' -- client should use its own mechanism.
	
	
2009-08-26  1.5.0.alpha11
	VINE: Adding elements to incorporate VINE functionality.
	- package org.mmisw.iserver.gwt.client.rpc.vine
		RelationInfo, Mapping
	- Server: List<RelationInfo> getVineRelationInfos()
	- TODO: Define precise info required for a mapping from this server side,
	perhaps separating the attributes of a RelationInfo from the mapping; just use
	the relation URI to link the two.
	
	More updates:  (still incomplete)
	- new MappingOntologyCreator (similar to VocabCreator)
	- enabling MappingDataCreationInfo processing



2009-08-25  1.5.0.alpha10
	- Server.getEntities(RegisteredOntologyInfo): adjustments for proper way to get the
	  ontology. This operation is only being used by the Vine app, which I'm updating now.

2009-08-25  1.5.0.alpha9
	issue #148: "Need property to capture "creator/author of original source vocabulary""
	- MdHelper: 
		- changed label and tooltip for hasCreator: 
		     "Ontology creator" ->  "..person that created the ontology representation"
		- added OmvMmi.hasContentCreator with label and tooltip: 
			"Content creator" -> "..person that created the contents reflected in the ontology"

2008-08-24  1.5.0.alpha8
	Fixed issue #161 "New version forces upload of local file"
	- CreateOntologyInfo.PriorOntologyInfo: new class to hold necessary info for when a new
	  version is to be created/registered
	- Server.createOntology: when tempOntologyInfo == null, it uses createOntologyInfo.getPriorOntologyInfo()
	  to retrieve the model directly and determine the uriForEmpty, from which the temporary
	  filename is also determined.
		
		
2008-08-16  1.5.0.alpha7
	issue 162: "External ontology considered to be internal"
	- OntServiceUtil.isOntResolvableUri(String uri): uses the ont.service.url
	  config parameter to determine if a given URI is resolvable by the deployed "ont" service.
	  This returns true iff uri.startsWith(value of ont.service.url parameter).
	  (there's a similar method in "ont" module)
	  
	- Added CreateOntologyInfo.uri member to "remember" previous URI when registerig a new version.
	
	NOTE: Suppose an external ontology whose contents are recognized by the "vocabulary (ie., voc2rd)" format.
	Currently, there is no check for the "external" property so the usual elements (authority, shortName, etc)
	are used to create the class name in the vocabulary. Should we support this, or perhaps just handle as
	"other" any external ontology?  The latter seems definitely simpler to provide.
	

2008-08-13  1.5.0.alpha6
	- Issue #164 Keep periods and case in term URI
		- More in general, if the first column given to VocCreator is named "uri," the values
		  are just checked for validity (according to java.net.URI constructor), and now
		  no conversions at all are performed. 
		  
	- CreateOntologyInfo and RegisteredOntologyInfo: removed namespaceRoot attribute -- this 
	  was added in a preliminary approach to handle re-hosting. It is not necessary anymore.
	
	
2008-08-10  1.5.0.alpha5
	Processing "version" parameter  (issue #159)
		- Server.getOntologyInfo(String ontologyUri): parses the string to extract version parameter, if any.
		
	Fixed replication of ontology attributes when creating a new version:
		- Server.createOntology(CreateOntologyInfo): newOntModel.removeAll(ont_, prd, null) is called when
		  there is a new value for the corresponding property.
		  TODO Note: We are always replacing the values; we may eventually consider a mechanism to allow 
		  actual *addition" of more values for the same predicate.
		  
	Server.getOntologyInfo(String ontologyUri): always include all versions. (note that the flag was
	called includePriorVersions originally)
	 
	
2008-08-07:
	- Checking pre-existing registered ontology when trying to submit a new one:
		Util2.checkNoPreexistingOntology(String possibleOntologyUri, BaseResult result)
		Server.createOntology(CreateOntologyInfo createOntologyInfo)
		OntServiceUtil.isRegisteredOntologyUri(String uriModel, String... acceptEntries)
		Util2.checkNoPreexistingOntology(String possibleOntologyUri, BaseResult result)
	
	
2000-08-03:   1.5.0.alpha4
	- Server.createOntology(CreateOntologyInfo): Do NOT remove "original OWL.Ontology individual"
	  if where are in re-hosting mode (createOntologyResult.isPreserveOriginalBaseNamespace).
	  If we did this on a model with the same original namespace, we would remove the owl:Ontology 
	  entry altogether and get an "rdf:Description" instead.
	  
	- Having weird RPC-related error "connection refused", which seems a GWT problem:
	  the asynchronous call registerOntology(CreateOntologyResult, LoginResult) on the client
	  does not get called to the server side.
	  
	  Fixed: Config.Prop.BIOPORTAL_REST_URL was not appropriately initialized from Server.
	  The default value (localhost based) caused the "connection refused".  This was very hard
	  to detect as the log info in the server was not showing anything!
	
	
	
2000-08-01,03:   1.5.0.alpha3 (was 1.5.0.alpha2)
	Server.getInstance(String ontServiceUrl, String bioportalRestUrl): now with parameters indicating
	the "Ont" service URL and the BioPortal REST base URL (these were previously hard-coded).
		- Config: added corresponding attributes
		- Corresponding updates in: OntologyUploader, VocabCreator, OntServiceUtil. 
		
2009-07-31  
	1.5.0.alpha2
	Continuing with "re-hosting" feature:
	
	- OntServiceUtil: new class with utility to resolve an ontology URI against the "Ont" service
	  but using the "uri" parameter, instead of trying to use the URI itself.
	- JenaUtil2.retrieveModel: based on service above.
	- Server:
		- getOntologyInfo: handle MmiUri case but also, non MmiUri (as a case of re-hosted ontology).
		  Note that the same (re-hosted) URI string is handled as both the versioned and unversioned,
		  TODO define versioning mechanism!
		- getOntologyContents: now uses JenaUtil2.retrieveModel
		- Other changes related with namespaceRoot, see below. 
		
	  
	- Some new attributes and various change under experimentation regarding user-given namespaceRoot
	  to construct the ontology URI:   
	  (NOTE: all of this may be reverted when general re-hosting mechanism is completed) 
		CreateOntologyInfo.namespaceRoot
		RegisteredOntologyInfo.namespaceRoot
		MetadataBaseInfo.authorityAbbreviationUri
		Util2: checks for duplicate URI
		VocabCreator: uses Server.DEFAULT_NAMESPACE_ROOT
		
		
	- new OntServiceUtil.getOntServiceUrl()
	
	- JenaUtil2.removeTrailingFragment: not only / but also trailing # is removed.  This change
	  responds to the re-hosting request.
	  
	- Added createOntologyResult.isPreserveOriginalBaseNamespace for convenience: it's set up in
	  createOntology and also used in registerOntology
	
2009-07-26
	
	Preparations for re-hosting of external ontology:
		"Re-hosting" means that the original base namespace of the submitted ontology is preserved.
		Basically, the whole ontology is un-changed except for new metadata elements.
	
	- TempOntologyInfo: new attribute preserveOriginalBaseNamespace
	  See ontmd project (portal) for how the flag is captured and included in the corresponding
	  TempOntologyInfo object.
	  
	- Server.createOntology(CreateOntologyInfo): uses the preserveOriginalBaseNamespace flag to
	  keep original base namespace or apply the regular asssignment of the MMISW-based namespace
	  as usual.
	  
	- Basic submission is now handled. I'm testing this with a simple ontology with base namespace
	  http://EXAMPLE.org/abc/example
	  
	- Next: complement other actions with registered "external" ontology, eg., "resolve" the 
	  ontology for display purposes ... 
	
	
2009-06-07
	- QueryUtil._setDomainClassesForProperties: checking for null to avoid a NPE with 
	  http://mmisw.org/ont/univmemphis/sensor
	  TODO Check why the domain uri has not been assigned for the propertyInfo.
	  
	  
2009-06-06
	- Utf8Util: new utilities (based on jchardet) to detect/verify the required UTF-8 charset
	  for any external stream to be incorporated in the registry (no attempts to do any automated
	  conversions for the moment).
	- Applying UTF-8 verification:
		- when loading a model from the registry: normally, every entry in the registry should be
		  UTF-8 already; however, this is a general sanity check that can be useful in the case of
		  any previously registered entry that may not be UTF-8.
		- before the conversion from CSV in VocabCreator
		- when trying to create an ontology from an external ontology file 
		
	- Util renamed to QueryUtil
	
	- XmlBaseExtractor: removed a strange ``throw new SAXException("No xml:base")'' in the original code;
	  this exception was thrown even when an xml:base element has already been found!
	  
	- Fixed issue #140: "ontologies with no declared namespace for empty prefix are not accepted"
		Util2.getDefaultNamespace(OntModel model, File file, BaseResult baseResult): now return
		the first non-null value in the following order:
			- model.getNsPrefixURI("")
			- XmlBaseExtractor.getXMLBase(...)
			- file.toURI().toString()
		See http://www.w3.org/TR/2003/PR-rdf-syntax-grammar-20031215/#section-Syntax-ID-xml-base
		
		
	  

2009-06-05
	- several adjustments as the main operations are completed
	- removed several interim dependencies
	- some renamings of types and operations
	- support for registering an uploaded file completed

2009-06-04
	- Implemented the "loading" of local file into working space. This is capture in a TempOntologyInfo.
	  (note the uploading operation is still implemented in the ontmd module).
	- Other preparations for registration of an "other" ontology (not vine, nor voc2rdf).
	
	
2009-06-03
	- Instead of using CreateOntologyInfo as a base class for the various types of ontologies to be
	  created (currently only "vocabulary", but later "mapping" and "regular externally given ontology"),
	  it now contains a DataCreationInfo member. This DataCreationInfo will serve as the basis for extension
	  fot the various types of ontologies.
	  
	- fixed issue #140: "ontologies with no declared namespace for empty prefix are not accepted"
	  If default namespace is not defined, try using xml:base's URI. TODO: test!
	  
	  
2009-06-02
	- getAllOntologies(boolean includePriorVersions) and getOntologyInfo(String ontologyUri) complemented
	  with auxiliary Map<String, List<OntologyInfo>> getUnversionedToOntologyInfoListMap(String onlyThisUnversionedUri).
	- In particular,
		- getOntologyInfo(String ontologyUri) now handles versioned and unversioned URI requests.
		- getAllOntologies(boolean includePriorVersions): main entries in the returned list at UNversioned;
		  the sublist of priorVersions are in versioned form *including* the most recent.
		  Elements in the priorVersion list are sorted by descending dataCreated so the most recent is first.
	
2009-06-01
	- Added OntologyInfo getOntologyInfo(String ontologyUri).
	
2009-05-31
	- Util.getEntities(OntologyInfo ontologyInfo, OntModel ontModel): assign ClassInfo object 
	  corresponding to the domain of each property so it's easier to get associated attributes. 
	  
	- Many changes for including editing and creation of new version of a vocabulary ontology
	
2009-05-25
	- Support to handle different types of ontology data: vocabulary, mapping, and other, although
	  this is based on some heuristics; a better mechanism should be implemented (idea is to use
	  a particular ontology metadata property that indicates the type of ontology, for example
	  omv:usedOntologyEngineeringTool.
	
	
2009-05-24
	- getAllOntologies now return only the latest versions of all ontologies as the main entries
	  of the list; and, optionally, the prior versiones will be included in the internal property
	  priorVersions.
	  
	  
2009-05-23
	- included most of metadata management here (from ontmd module)

2009-05-22
	- Added username attribute to OntologyInfo
	
	- Added service getEntities(String ontologyUri), which btw facilitates current refactoring. 
	 
2009-05-13
	Module extracted from vine prototype. The goal is to unify the various operations to the
	server through this module.
	Note: this module provides the serializable objects required for the communication and
	a set of core types to be used on the server side.
	
	This is initially to be used by OntMd to provide the "portal" interface. Later,
	vine itself will be integrated.
